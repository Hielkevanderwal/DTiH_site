# -*- coding: utf-8 -*-
"""
Created on Sun Dec  4 14:15:09 2022

@author: 20212077
"""
import openpyxl
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

def read_csv(file_name,column_header = 'val1'):
    data = pd.read_csv(file_name, header=6, delimiter=';')
    return data[column_header].dropna().tolist()

def readExcel(file_name,column_nr=2):
    """ This function reads the excel files generated by the FreeSense device.
    
        INPUT:
        - Filename: must be an .xlsx file.
        - Column_nr: number of the column as an integer.
        
        OUTPUT:
        - A list with the measurement data (integers)
    """
    wb = openpyxl.load_workbook(filename = file_name)
    ws = wb.active
    nr_rows = ws.max_row

    data = []
    for i in range(9,nr_rows+1):
        measurement = ws.cell(row=i,column=column_nr).value
        if measurement != None:
            data.append(measurement)
            
    return data

def plotData(data,samplerate,begin_time=None,end_time=None):
    """ This function plots the output of the readExcel function.
    
        INPUT:
        - A list with data optained from readExcel
        - An integer number to indicate the sample rate (Hz)
        - An integer number for the beginning time of the plot in seconds (optional)
        - An integer number for the ending time of the plot in seconds (optional)
        
        OUTPUT:
        - Plot of the data
    """
    if begin_time == None or end_time == None:
        plt.plot(np.arange(0,len(data)/samplerate,1/samplerate),
                 data)
    else:
        plt.plot(np.arange(begin_time*128/samplerate, end_time*128/samplerate+1/samplerate, 1/samplerate),
                 data[begin_time*128:end_time*128+1])
    
    plt.xlabel('Time (s)')
    

if __name__=='__main__':
    data = readExcel('data_mart_lang.xlsx')
    plotData(data,128)